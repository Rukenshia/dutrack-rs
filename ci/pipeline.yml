resource_types:
- name: npm-cache
  type: docker-image
  source: {repository: ymedlop/npm-cache-resource, tag: latest}

resources:
- name: source
  type: git
  source: &repo
    uri: https://github.com/Rukenshia/dutrack-rs.git
    branch: master
    git_config:
    - name: core.bigFileThreshold
      value: 10m
    disable_ci_skip: true
- name: node-modules
  type: npm-cache # as defined above
  source:
    yarn-support: true
    <<: *repo # the source is the same as the corresponding git resource ...
    paths: # ... except that it's only interested in files listing dependencies
      - package.json
- name: assets-bundle
  type: s3
  source:
    region_name: eu-central-1
    bucket: dutrack-builds
    versioned_file: assets.tar.gz
    access_key_id: {{aws-key}}
    secret_access_key: {{aws-secret-key}}
- name: binary
  type: s3
  source:
    region_name: eu-central-1
    bucket: dutrack-builds
    versioned_file: dutrack-rs
    access_key_id: {{aws-key}}
    secret_access_key: {{aws-secret-key}}

jobs:
- name: cache
  plan:
  - get: source
    trigger: true
  - get: node-modules

- name: assets
  plan:
  - get: source
    trigger: true
    passed: [cache]
  - get: node-modules
    passed: [cache]
  - task: sass_to_css
    file: source/ci/tasks/sass_to_css.yml
  - task: es6_to_js
    file: source/ci/tasks/es6_to_js.yml
  - task: copy_images
    file: source/ci/tasks/copy_images.yml
  - task: bundle_assets
    file: source/ci/tasks/bundle_assets.yml
  - put: assets-bundle
    params:
      file: assets-bundle/assets.tar.gz

- name: rust-build
  plan:
  - get: source
    trigger: true
  - task: build
    file: source/ci/tasks/rust_app.yml
  - put: binary
    params:
      file: bin/dutrack-rs

- name: release
  plan:
  - get: source
    trigger: true
    passed: [rust-build]
  - get: assets-bundle
    passed: [assets]
  - get: binary
    passed: [rust-build]
  - task: bundle-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: alpine
      inputs:
        - name: source
          path: /src
        - name: assets-bundle
          path: /assets
        - name: binary
          path: /bin
      outputs:
        - name: bundle
      run:
        path: sh
        args: 
          - -exc
          - |
            mkdir -p temp/assets
            tar -xzvf assets/assets.tar.gz -C temp/assets/
            cp bin/dutrack-rs temp/
            cp -r src/templates temp/templates
            cd temp
            tar -czvf dutrack.tar.gz *
            cp dutrack.tar.gz ../bundle/dutrack.tar.gz
  - put: binary
    params:
      file: bundle/dutrack.tar.gz